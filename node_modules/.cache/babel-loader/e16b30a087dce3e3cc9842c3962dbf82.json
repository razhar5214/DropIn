{"ast":null,"code":"var _jsxFileName = \"/Users/awais01/Desktop/DropIn_FrontEnd/src/components/AutoSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport scriptLoader from 'react-async-script-loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AutoSearch(_ref) {\n  _s();\n\n  let {\n    isScriptLoaded,\n    isScriptLoadSucceed\n  } = _ref;\n  const [address, setAddress] = useState(\"\");\n\n  const handleChange = value => {\n    setAddress(value);\n  };\n\n  const handleSelect = value => {\n    setAddress(value);\n  };\n\n  if (isScriptLoaded && isScriptLoadSucceed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: handleChange,\n        onSelect: handleSelect,\n        children: _ref2 => {\n          let {\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                placeholder: \"Enter Address ...\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"NOT loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AutoSearch, \"Nj6wSJwO05S0A7/J3wD3ytLWGxI=\");\n\n_c = AutoSearch;\nexport default scriptLoader([`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAP_API}&libraries=places`])(AutoSearch);\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoSearch\");","map":{"version":3,"sources":["/Users/awais01/Desktop/DropIn_FrontEnd/src/components/AutoSearch.js"],"names":["React","useState","PlacesAutocomplete","scriptLoader","AutoSearch","isScriptLoaded","isScriptLoadSucceed","address","setAddress","handleChange","value","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","process","env","REACT_APP_GOOGLE_MAP_API"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAGA,SAASC,UAAT,OAA0D;AAAA;;AAAA,MAAtC;AAACC,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,GAAsC;AACtD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,UAAU,CAACE,KAAD,CAAV;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAID,KAAD,IAAW;AAC5BF,IAAAA,UAAU,CAACE,KAAD,CAAV;AACH,GAFD;;AAGA,MAAGL,cAAc,IAAIC,mBAArB,EAAyC;AACrC,wBACI;AAAA,6BACI,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAEC,OAA3B;AAAoC,QAAA,QAAQ,EAAEE,YAA9C;AAA4D,QAAA,QAAQ,EAAEE,YAAtE;AAAA,kBACC;AAAA,cAAC;AAACC,YAAAA,aAAD;AAAgBC,YAAAA,WAAhB;AAA6BC,YAAAA,sBAA7B;AAAqDC,YAAAA;AAArD,WAAD;AAAA,8BACG;AAAA,mCACI,sBAAWH,aAAa,CAAC;AACrBI,gBAAAA,WAAW,EAAE;AADQ,eAAD;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADH;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD,MAeK;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ;;GA7BQZ,U;;KAAAA,U;AA8BT,eAAeD,YAAY,CAAC,CAAE,+CAA8Cc,OAAO,CAACC,GAAR,CAAYC,wBAAyB,mBAArF,CAAD,CAAZ,CAAuHf,UAAvH,CAAf","sourcesContent":["import React from \"react\"\nimport {useState} from 'react'\nimport PlacesAutocomplete from 'react-places-autocomplete'\nimport scriptLoader from 'react-async-script-loader'\n\n\nfunction AutoSearch({isScriptLoaded, isScriptLoadSucceed}){\n    const [address, setAddress] = useState(\"\");\n\n    const handleChange = (value) => {\n        setAddress(value);\n    }\n    const handleSelect = (value) => {\n        setAddress(value);\n    }\n    if(isScriptLoaded && isScriptLoadSucceed){\n        return(\n            <div>\n                <PlacesAutocomplete value={address} onChange={handleChange} onSelect={handleSelect}>\n                {({getInputProps, suggestions, getSuggestionItemProps, loading})=>(\n                    <div>\n                        <input {...getInputProps({\n                            placeholder: \"Enter Address ...\"\n                        })}/>\n                    </div>\n                )}\n                </PlacesAutocomplete>\n\n            </div>\n        )\n    }else{\n        return(\n            <div>NOT loaded</div>\n        )\n    }\n}\nexport default scriptLoader([`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAP_API}&libraries=places`])(AutoSearch);\n "]},"metadata":{},"sourceType":"module"}