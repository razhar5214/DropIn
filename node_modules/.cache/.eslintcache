[{"/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/index.js":"1","/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/reportWebVitals.js":"2","/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/App.js":"3","/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/components/AutoSearch.js":"4","/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/components/ApartmentView.js":"5","/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/components/Navbar.js":"6","/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/components/Landing.js":"7"},{"size":507,"mtime":1645930381776,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1645930381776,"results":"10","hashOfConfig":"9"},{"size":1493,"mtime":1646597325259,"results":"11","hashOfConfig":"9"},{"size":4392,"mtime":1646597245429,"results":"12","hashOfConfig":"9"},{"size":2832,"mtime":1646596785508,"results":"13","hashOfConfig":"9"},{"size":687,"mtime":1646536540308,"results":"14","hashOfConfig":"9"},{"size":1513,"mtime":1646527309660,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"cm48hy",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"19"},"/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/index.js",[],[],["43","44"],"/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/reportWebVitals.js",[],[],"/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/App.js",["45","46","47","48"],[],"import './styles/App.css';\nimport Navbar from './components/Navbar'\nimport ApartmentView from './components/ApartmentView'\nimport Map from './components/AutoSearch'\nimport React, { useState, useEffect } from \"react\"\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Landing from './components/Landing';\nimport AutoSearch from './components/AutoSearch';\n\nfunction App() {\n  const [address, setAddress] = useState('')\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lng: null,\n});\n\n  function updateAddress(newAddress) {\n    console.log('getting child address data in app.js:', newAddress)\n    setAddress(...address, address => newAddress)\n  }\n\n  function updateCoordinates(newCoord) {\n    console.log('getting child coordinates data in app.js:', newCoord)\n    setCoordinates(...coordinates, coordinates => newCoord)\n  }\n\n    return (\n      <div className=\"App\">\n        <Router>\n          <Routes className='routes'>\n            <Route exact path=\"/\" element={<Landing updateAddress = {updateAddress} updateCoordinates = {updateCoordinates} />} />\n            <Route exact path=\"/apartment-view\" element={<ApartmentView address = {address} />} />\n            {/* <Route exact path=\"/\" element={<AutoSearch />}/> */}\n          </Routes>\n        </Router>\n      </div>\n    );\n\n\n}\n\n// export default scriptLoader([`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAP_API}&libraries=places`])(App);\nexport default App","/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/components/AutoSearch.js",["49"],[],"import React from \"react\"\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n// import PlacesAutocomplete from 'react-places-autocomplete'\n// import Autocomplete from \"react-google-autocomplete\";\n// import GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n// import ReactStreetview from 'react-streetview';\nimport Streetview from 'react-google-streetview';\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n} from 'react-places-autocomplete';\nimport scriptLoader from 'react-async-script-loader'\n\n\nfunction AutoSearch(props, isScriptLoaded, isScriptLoadSucceed) {\n    console.log(props);\n    const [address, setAddress] = useState(\"\");\n\n    let navigate = useNavigate()\n\n    const [coordinates, setCoordinates] = useState({\n        lat: null,\n        lng: null,\n    });\n\n    const handleChange = (value) => {\n        setAddress(value)\n    }\n\n    // const handleSelect = (value) => {\n    //     console.log('handle select', address)\n    //     setAddress(value)\n    //     props.updateAddress(address)\n    //     localStorage.setItem(\"address\", value)\n    //     // navigate('/apartment-view')\n\n    //     geocodeByAddress(value)\n    //         .then(results => getLatLng(results[0]))\n    //         .then(latLng => console.log('Success', latLng))\n    //         .catch(error => console.error('Error', error))\n    //     ;\n\n    // }\n\n\n    const handleSelect = async (value) => {\n        console.log('in handleSelect', address)\n        console.log('in handleSelect',coordinates)\n\n        const results = await geocodeByAddress(value);\n        const latLng = await getLatLng(results[0]);\n\n        setCoordinates(latLng);\n        setAddress(value)\n        props.updateAddress(address)\n        props.updateCoordinates(coordinates)\n        localStorage.setItem(\"address\", value)\n        // navigate('/apartment-view')\n    }\n\n\n    //example lat was 46.9171876\n    //example lng was 17.8951832\n    const streetViewPanoramaOptions = {\n        position: { lat: coordinates.lat, lng: coordinates.lng },\n        pov: { heading: 100, pitch: 0 },\n        zoom: 1\n    };\n\n    if (props.isScriptLoaded && props.isScriptLoadSucceed) {\n        return (\n            <div>\n\n\n                <div style={{\n                    width: '800px',\n                    height: '450px',\n                    backgroundColor: '#eeeeee'\n                }}>\n                    <Streetview\n                        apiKey={process.env.REACT_APP_GOOGLE_MAP_API}\n                        streetViewPanoramaOptions={streetViewPanoramaOptions}\n                    />\n                </div>\n\n\n                <PlacesAutocomplete value={address} onChange={handleChange} onSelect={handleSelect}>\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <div>\n                            <input {...getInputProps({\n                                placeholder: \"Enter Address ...\",\n                                className: 'location-search-input'\n                            })} />\n\n                            <div className=\"autocomplete-dropdown-container\">\n                                {loading && <div>Loading...</div>}\n\n                                {suggestions.map((suggestion, key) => {\n                                    const style = suggestion.active ?\n                                        { backgroundColor: \"#4287f5\", cursor: \"pointer\" } :\n                                        { backgroundColor: \"#ffffff\", cursor: \"pointer\" }\n                                    key = suggestion.description;\n\n                                    return (\n                                        <div key={suggestion.description} {...getSuggestionItemProps(suggestion, { style })}>\n                                            <span>{suggestion.description}</span>\n                                        </div>\n                                    )\n                                })\n\n                                }\n                            </div>\n                        </div>\n                    )}\n                </PlacesAutocomplete>\n\n            </div>\n        )\n    } else {\n        return (\n            <div>NOT loaded</div>\n        )\n    }\n}\nexport default scriptLoader([`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAP_API}&libraries=places`])(AutoSearch);\n",["50","51"],"/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/components/ApartmentView.js",["52","53"],[],"import React from 'react'\nimport { useState } from 'react'\nimport '../styles/ApartmentView.css'\nimport Navbar from './Navbar';\n\nexport default function ApartmentView(props) {\n    const [userReview, setUserReview] = useState(\"\");\n    const [apartmentPic, setApartmentPic] = useState(\"\")\n\n    function handleOnChange(event) {\n        event.preventDefault();\n        setUserReview(event.target.value)\n        console.log(userReview);\n    }\n    function handleSubmit(event) {\n        event.preventDefault();\n        console.log(userReview);\n    }\n    \n    return (\n        <>\n            <Navbar />\n\n            <div className=\"apartmentView\">\n                <div className='apt-view-page'>\n                    <h1>address: {localStorage.getItem(\"address\")}</h1>\n                </div>\n\n                <div className=\"apartment-visuals\">\n                    <div className=\"apartment-pic\">apartment picture</div>\n                    <div className=\"apartment-map\">apartment map</div>\n                </div>\n                <div className=\"star-rating\">\n                    Rating: (insert star pic here)\n                </div>\n                <h1 className=\"reviews-title\">What residents have to say ...</h1>\n                <div className=\"reviews\">\n\n                    <div className=\"review-card\">\n                        <div className=\"review-content\">The heat is always broken.</div>\n                        <div className=\"review-author\">James A.</div>\n                    </div>\n                    <div className=\"review-card\">\n                        <div className=\"review-content\">The dogs are always barking.</div>\n                        <div className=\"review-author\">Crystal T.</div>\n                    </div>\n                    <div className=\"review-card\">\n                        <div className=\"review-content\">I LOVE the neighbors.</div>\n                        <div className=\"review-author\">Anna M.</div>\n                    </div>\n                    <div className=\"review-card\">\n                        <div className=\"review-content\">It's a quiet place, I like it.</div>\n                        <div className=\"review-author\">Linda A.</div>\n                    </div>\n\n                </div>\n                <form onSubmit={handleSubmit} className=\"user-review-form\">\n                    <label>\n                        <input\n                            className=\"user-review-textbox\"\n                            placeholder='Leave a review...'\n                            type=\"textarea\"\n                            value={userReview}\n                            onChange={handleOnChange}\n                        />\n                    </label>\n                    <input type=\"submit\" value=\"SUBMIT\" className=\"user-review-submit-btn\" />\n                </form>\n            </div>\n        </>\n    )\n}","/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/components/Navbar.js",[],[],"/Users/shakhram/DropIn_FrontEnd/DropIn_FrontEnd/src/components/Landing.js",["54","55","56","57","58","59","60","61"],[],"import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport BackgroundImage from '../images/map-of-nyc.png'\nimport '../styles/Landing.css'\nimport ApartmentView from './ApartmentView'\nimport { Link } from 'react-router-dom'\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete'\nimport AutoSearch from './AutoSearch'\n\nexport default function Landing(props) {\n    console.log(props)\n    const [address, setAddress] = useState('')\n\n    let navigate = useNavigate()\n\n    // const handleSubmit = () => {\n    //     e.preventDefault()\n    //     props.updateAddress(address)\n    //     localStorage.setItem(\"address\", address)\n    //     console.log('in landing.js', address)\n    //     navigate('/apartment-view')\n    // }\n\n    // function updateAddress(addressFromAutoSearch){\n    //     props.updateAddress(addressFromAutoSearch) \n    // }\n\n    return (\n\n        <div className='landing-page'>\n\n            <div>\n                <img className='landing-background' src={BackgroundImage} />\n            </div>\n\n            <div className='landing-search'>\n                <h1 className='landing-title'>DROP-IN</h1>\n\n                {/* {<form onSubmit={(e) => handleSubmit}>\n                    {<input placeholder='123 Main Street...' onChange={(e) => setAddress(e.target.value)}></input>}\n                </form> */}\n                <AutoSearch updateAddress={props.updateAddress} />\n\n            </div>\n\n\n        </div >\n\n    )\n}",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"70","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":11},{"ruleId":"66","severity":1,"message":"71","line":5,"column":27,"nodeType":"68","messageId":"69","endLine":5,"endColumn":36},{"ruleId":"66","severity":1,"message":"72","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":18},{"ruleId":"66","severity":1,"message":"73","line":20,"column":9,"nodeType":"68","messageId":"69","endLine":20,"endColumn":17},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","replacedBy":"75"},{"ruleId":"66","severity":1,"message":"76","line":8,"column":12,"nodeType":"68","messageId":"69","endLine":8,"endColumn":24},{"ruleId":"66","severity":1,"message":"77","line":8,"column":26,"nodeType":"68","messageId":"69","endLine":8,"endColumn":41},{"ruleId":"66","severity":1,"message":"71","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"78","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":21},{"ruleId":"66","severity":1,"message":"79","line":7,"column":10,"nodeType":"68","messageId":"69","endLine":7,"endColumn":14},{"ruleId":"66","severity":1,"message":"80","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":32},{"ruleId":"66","severity":1,"message":"81","line":13,"column":12,"nodeType":"68","messageId":"69","endLine":13,"endColumn":19},{"ruleId":"66","severity":1,"message":"82","line":13,"column":21,"nodeType":"68","messageId":"69","endLine":13,"endColumn":31},{"ruleId":"66","severity":1,"message":"73","line":15,"column":9,"nodeType":"68","messageId":"69","endLine":15,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":34,"column":17,"nodeType":"85","endLine":34,"endColumn":77},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Map' is defined but never used.","'useEffect' is defined but never used.","'AutoSearch' is defined but never used.","'navigate' is assigned a value but never used.",["86"],["87"],"'apartmentPic' is assigned a value but never used.","'setApartmentPic' is assigned a value but never used.","'ApartmentView' is defined but never used.","'Link' is defined but never used.","'GooglePlacesAutocomplete' is defined but never used.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]