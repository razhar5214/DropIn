[{"/Users/shakhram/Drop-In/DropIn_FrontEnd/src/index.js":"1","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/App.js":"2","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/reportWebVitals.js":"3","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/components/ApartmentView.js":"4","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/components/AutoSearch.js":"5","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/components/Navbar.js":"6","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/components/Landing.js":"7"},{"size":507,"mtime":1647190128928,"results":"8","hashOfConfig":"9"},{"size":1504,"mtime":1647190192572,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1647190128929,"results":"11","hashOfConfig":"9"},{"size":3924,"mtime":1647190192572,"results":"12","hashOfConfig":"9"},{"size":3480,"mtime":1647190192573,"results":"13","hashOfConfig":"9"},{"size":656,"mtime":1647190192573,"results":"14","hashOfConfig":"9"},{"size":927,"mtime":1647190192573,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1el65fq",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/shakhram/Drop-In/DropIn_FrontEnd/src/index.js",[],[],"/Users/shakhram/Drop-In/DropIn_FrontEnd/src/App.js",["42","43","44","45"],[],"import './styles/App.css';\nimport Navbar from './components/Navbar'\nimport ApartmentView from './components/ApartmentView'\nimport Map from './components/AutoSearch'\nimport React, { useState, useEffect } from \"react\"\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Landing from './components/Landing';\nimport AutoSearch from './components/AutoSearch';\n\nfunction App() {\n  const [address, setAddress] = useState('')\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lng: null,\n});\n\n  function updateAddress(newAddress) {\n    console.log('getting child address data in app.js:', newAddress)\n    setAddress(...address, address => newAddress)\n  }\n\n  function updateCoordinates(newCoord) {\n    console.log('getting child coordinates data in app.js:', newCoord)\n    setCoordinates(coordinates => newCoord)\n  }\n\n    return (\n      <div className=\"App\">\n        <Router>\n          <Routes className='routes'>\n            <Route exact path=\"/\" element={<Landing updateAddress = {updateAddress} updateCoordinates = {updateCoordinates} />} />\n            <Route exact path=\"/apartment-view\" element={<ApartmentView address = {address} coordinates = {coordinates}/>} />\n            {/* <Route exact path=\"/\" element={<AutoSearch />}/> */}\n          </Routes>\n        </Router>\n      </div>\n    );\n\n\n}\n\n// export default scriptLoader([`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAP_API}&libraries=places`])(App);\nexport default App","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/reportWebVitals.js",[],[],"/Users/shakhram/Drop-In/DropIn_FrontEnd/src/components/ApartmentView.js",["46","47"],[],"import React from 'react'\nimport { useState } from 'react'\nimport '../styles/ApartmentView.css'\nimport Navbar from './Navbar';\nimport Streetview from 'react-google-streetview';\n\nexport default function ApartmentView(props) {\n    console.log('in apartment view', props)\n    const [userReview, setUserReview] = useState(\"\");\n    const [apartmentPic, setApartmentPic] = useState(\"\")\n\n    function handleOnChange(event) {\n        event.preventDefault();\n        setUserReview(event.target.value)\n        console.log(userReview);\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        console.log(userReview);\n    }\n\n    const streetViewPanoramaOptions = {\n\n        position: { lat: JSON.parse(localStorage.getItem(\"lat\")), lng: JSON.parse(localStorage.getItem(\"lng\")) },\n        pov: { heading: 100, pitch: 0 },\n        zoom: 1\n    };\n\n    return (\n        <>\n            <Navbar />\n\n            {/* <div style={{\n                width: '800px',\n                height: '450px',\n                backgroundColor: '#eeeeee'\n            }}>\n                <Streetview\n                    apiKey={process.env.REACT_APP_GOOGLE_MAP_API}\n                    streetViewPanoramaOptions={streetViewPanoramaOptions}\n                />\n            </div> */}\n\n            <div className=\"apartmentView\">\n\n                <div className='apt-view-page'>\n                    <h1>address: {localStorage.getItem(\"address\")}</h1>\n                    <h1>address: {props.address}</h1>\n                </div>\n\n                <div className=\"apartment-visuals\">\n\n                    <div className=\"apartment-pic\">apartment picture\n                        <div className='streetview'>\n                            <Streetview\n                                apiKey={process.env.REACT_APP_GOOGLE_MAP_API}\n                                streetViewPanoramaOptions={streetViewPanoramaOptions}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"apartment-map\">apartment map</div>\n                </div>\n\n                <div className=\"star-rating\">\n                    Rating: (insert star pic here)\n                </div>\n\n                <h1 className=\"reviews-title\">What residents have to say ...</h1>\n\n                <div className=\"reviews\">\n\n                    <div className=\"review-card\">\n                        <div className=\"review-content\">The heat is always broken.</div>\n                        <div className=\"review-author\">James A.</div>\n                    </div>\n                    <div className=\"review-card\">\n                        <div className=\"review-content\">The dogs are always barking.</div>\n                        <div className=\"review-author\">Crystal T.</div>\n                    </div>\n                    <div className=\"review-card\">\n                        <div className=\"review-content\">I LOVE the neighbors.</div>\n                        <div className=\"review-author\">Anna M.</div>\n                    </div>\n                    <div className=\"review-card\">\n                        <div className=\"review-content\">It's a quiet place, I like it.</div>\n                        <div className=\"review-author\">Linda A.</div>\n                    </div>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"user-review-form\">\n                    {/* <label> */}\n                        <input\n                            className=\"user-review-textbox\"\n                            placeholder='Leave a review...'\n                            type=\"textarea\"\n                            value={userReview}\n                            onChange={handleOnChange}\n                        />\n                    {/* </label> */}\n                    <input type=\"submit\" value=\"SUBMIT\" className=\"user-review-submit-btn\" />\n                </form>\n            </div>\n        </>\n    )\n}","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/components/AutoSearch.js",["48"],[],"import React, { useEffect } from \"react\"\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n} from 'react-places-autocomplete';\nimport scriptLoader from 'react-async-script-loader'\n\n\nfunction AutoSearch(props, isScriptLoaded, isScriptLoadSucceed) {\n    console.log('AutoSearch Props: ',props);\n    \n    let navigate = useNavigate()\n\n    const [address, setAddress] = useState(\"\");\n\n    const [userInput, setUserInput] = useState(\"\");\n\n    const [coordinates, setCoordinates] = useState({\n        lat: null,\n        lng: null,\n    });\n\n\n    useEffect(() => {\n            props.updateAddress(address)\n            props.updateCoordinates(coordinates)\n    }, [address])\n\n\n    const handleChange = (value) => {\n        setUserInput(value)\n    }\n\n    const handleSelect = async (value) => {\n        console.log('in handleSelect', address)\n        console.log('in handleSelect', coordinates)\n\n        const results = await geocodeByAddress(value);\n        const latLng = await getLatLng(results[0]);\n\n        setCoordinates(prevCoords => ({\n            ...prevCoords,\n            lat: latLng.lat,\n            lng: latLng.lng\n        }));\n        setUserInput(value)\n        setAddress(...address, address => value)\n        props.updateAddress(address)\n        props.updateCoordinates(coordinates)\n        localStorage.setItem(\"address\", value)\n        localStorage.setItem(\"lat\", JSON.stringify(latLng.lat))\n        localStorage.setItem(\"lng\", JSON.stringify(latLng.lng))\n        navigate('/apartment-view')\n    }\n\n    if (props.isScriptLoaded && props.isScriptLoadSucceed) {\n        return (\n            <div>\n\n                <PlacesAutocomplete value={userInput} onChange={handleChange} onSelect={handleSelect}>\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <div>\n                            <input {...getInputProps({\n                                placeholder: \"Enter Address ...\",\n                                className: 'location-search-input'\n                            })} />\n\n                            <div className=\"autocomplete-dropdown-container\">\n                                {loading && <div>Loading...</div>}\n\n                                {suggestions.map((suggestion, key) => {\n                                    const style = suggestion.active ?\n                                        { backgroundColor: \"#4287f5\", cursor: \"pointer\" } :\n                                        { backgroundColor: \"#ffffff\", cursor: \"pointer\" }\n                                    key = suggestion.description;\n\n                                    return (\n                                        <div key={suggestion.description} {...getSuggestionItemProps(suggestion, { style })}>\n                                            <span>{suggestion.description}</span>\n                                        </div>\n                                    )\n                                })\n\n                                }\n                            </div>\n                        </div>\n                    )}\n                </PlacesAutocomplete>\n\n            </div>\n        )\n    } else {\n        return (\n            <div>NOT loaded</div>\n        )\n    }\n}\nexport default scriptLoader([`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAP_API}&libraries=places`])(AutoSearch);\n","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/components/Navbar.js",["49"],[],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../styles/Navbar.css\"\nimport AutoSearch from './AutoSearch';\nimport BackgroundImage from '../images/apartment-skyline.jpg'\n\nexport default function Navbar() {\n    return (\n        <div className=\"navbar\">\n\n            <img className='nav-img' src={BackgroundImage} alt='NYC Apartments'/>\n\n            <div className='nav-buttons'>\n                <div className=\"nav-home-btn\"> <Link to=\"/\">HOME </Link></div>\n                <div className='nav-input'>\n                </div>\n                <div className=\"nav-login-btn\"> LOGIN </div>\n            </div>\n\n        </div>\n    )\n}","/Users/shakhram/Drop-In/DropIn_FrontEnd/src/components/Landing.js",["50"],[],"import React from 'react'\nimport BackgroundImage from '../images/map-of-nyc2.png'\nimport '../styles/Landing.css'\nimport AutoSearch from './AutoSearch'\n\nexport default function Landing(props) {\n    console.log('Landing Props: ',props);\n\n    function updateAddress(addressFromAutoSearch){\n        props.updateAddress(addressFromAutoSearch) //sending it up to App.js\n    }\n    function updateCoordinates(coordsFromAutoSearch){\n        props.updateCoordinates(coordsFromAutoSearch) //sending it up to App.js\n    }\n    return (\n\n        <div className='landing-page'>\n\n            <div>\n                <img className='landing-background' src={BackgroundImage} />\n            </div>\n\n            <div className='landing-search'>\n                <h1 className='landing-title'>DROP-IN</h1>\n\n                <AutoSearch updateAddress={updateAddress} updateCoordinates={updateCoordinates}/>\n\n            </div>\n\n        </div >\n\n    )\n}",{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"51","severity":1,"message":"55","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":11},{"ruleId":"51","severity":1,"message":"56","line":5,"column":27,"nodeType":"53","messageId":"54","endLine":5,"endColumn":36},{"ruleId":"51","severity":1,"message":"57","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":18},{"ruleId":"51","severity":1,"message":"58","line":10,"column":12,"nodeType":"53","messageId":"54","endLine":10,"endColumn":24},{"ruleId":"51","severity":1,"message":"59","line":10,"column":26,"nodeType":"53","messageId":"54","endLine":10,"endColumn":41},{"ruleId":"60","severity":1,"message":"61","line":29,"column":8,"nodeType":"62","endLine":29,"endColumn":17,"suggestions":"63"},{"ruleId":"51","severity":1,"message":"57","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":20,"column":17,"nodeType":"66","endLine":20,"endColumn":77},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Map' is defined but never used.","'useEffect' is defined but never used.","'AutoSearch' is defined but never used.","'apartmentPic' is assigned a value but never used.","'setApartmentPic' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coordinates' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"68","fix":"69"},"Update the dependencies array to be: [address, coordinates, props]",{"range":"70","text":"71"},[750,759],"[address, coordinates, props]"]